package edu.umass.cs.xdn.tools;

import edu.umass.cs.gigapaxos.PaxosConfig;
import edu.umass.cs.gigapaxos.interfaces.Request;
import edu.umass.cs.reconfiguration.http.HttpActiveReplicaPacketType;
import edu.umass.cs.reconfiguration.http.HttpActiveReplicaRequest;
import edu.umass.cs.xdn.XDNConfig;
import edu.umass.cs.xdn.deprecated.XDNAgentClient;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.charset.StandardCharsets;
import java.util.*;

public class OwnCloudUploaderClient {

    String serviceName;
    String name;
    String imageName;
    String value;
    boolean coord;
    int numReq;
    String target;

    int id;
    static int received = 0;

    final private static long timeout = 1000;
    XDNAgentClient client;

    private OwnCloudUploaderClient() throws IOException{
        XDNConfig.load();
        name = XDNConfig.prop.getProperty(XDNConfig.XC.NAME.toString());
        imageName = XDNConfig.prop.getProperty(XDNConfig.XC.IMAGE_NAME.toString());
        value = XDNConfig.prop.getProperty(XDNConfig.XC.VALUE.toString());
        coord = Boolean.parseBoolean(XDNConfig.prop.getProperty(XDNConfig.XC.COORD.toString()));

        numReq = 5;
        if ( XDNConfig.prop.getProperty(XDNConfig.XC.NUM_REQ.toString()) != null)
            numReq = Integer.parseInt(XDNConfig.prop.getProperty(XDNConfig.XC.NUM_REQ.toString()));

        target = null;
        if( XDNConfig.prop.getProperty(XDNConfig.XC.TARGET.toString()) != null)
            target = XDNConfig.prop.getProperty(XDNConfig.XC.TARGET.toString());


        serviceName = XDNConfig.generateServiceName(imageName, name);

        id = (new Random()).nextInt();

        client = new XDNAgentClient();
    }

    private HttpActiveReplicaRequest getRequest() throws Exception {
        // User credentials for OwnCloud service
        String username = "admin";
        String password = "admin";
        String authString = Base64.getEncoder().encodeToString((username + ":" + password).getBytes());

        // Description of file that will be uploaded
        String fileName = "uploaded-file-" + UUID.randomUUID().toString() + ".png";
        byte[] fileContent = Base64.getDecoder().decode("".getBytes("UTF-8"));

        // Http request that will be forwarded to replica
        XDNAppHttpRequest r = new XDNAppHttpRequest();
        r.setPath("/remote.php/webdav/" + fileName);
        r.setMethod("PUT");
        r.addHeader("Authorization", "Basic " + authString);
        r.addHeader("Accept", "*/*");
        r.addHeader("Content-Type", "application/x-www-form-urlencoded");
        r.addHeader("Content-Length", String.valueOf(fileContent.length));
        r.setPayload(fileContent);

        return new HttpActiveReplicaRequest(
            HttpActiveReplicaPacketType.EXECUTE,
            serviceName,
            id++,
            r.toJSONString(),
            coord,
            false,
            0
        );
    }

    private void sendRequest() {
        InetSocketAddress addr = null;
        if ( target !=null ){
            addr = PaxosConfig.getActives().get(target);
        }

        System.out.println("OwnCloudUploaderClient:>> Sending request to target: "+target+", address:"+addr);
        Request result = null;
        try {
            result = client.sendRequest(getRequest(), timeout);
        } catch (Exception e) {
            e.printStackTrace();
        }
        if (result == null){
            System.out.println("OwnCloudUploaderClient:>> Request timed out");
        }
    }

    private void close() {
        client.close();
    }

    public static void main(String[] args) throws IOException {
        OwnCloudUploaderClient c = new OwnCloudUploaderClient();
        c.sendRequest();
        c.close();
    }
}
